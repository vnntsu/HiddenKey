//
// Generated by CocoaPods-Keys
// on 12/03/2018
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "HiddenKeyKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation HiddenKeyKeys

  @dynamic accessKey;
  @dynamic key;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(HiddenKeyKeys *, SEL) = NULL;

  if ([key isEqualToString:@"accessKey"]) {
    implementation = _podKeys5d678a4961ea2aa583868e22231f7857;
  }

  if ([key isEqualToString:@"key"]) {
    implementation = _podKeys3c6e0b8a9c15224a8228b9a98ca1531d;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys5d678a4961ea2aa583868e22231f7857(HiddenKeyKeys *self, SEL _cmd)
{
  
    
      char cString[10] = { HiddenKeyKeysData[109], HiddenKeyKeysData[854], HiddenKeyKeysData[259], HiddenKeyKeysData[498], HiddenKeyKeysData[938], HiddenKeyKeysData[1660], HiddenKeyKeysData[2247], HiddenKeyKeysData[2581], HiddenKeyKeysData[2512], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3c6e0b8a9c15224a8228b9a98ca1531d(HiddenKeyKeys *self, SEL _cmd)
{
  
    
      char cString[74] = { HiddenKeyKeysData[867], HiddenKeyKeysData[2443], HiddenKeyKeysData[1994], HiddenKeyKeysData[377], HiddenKeyKeysData[761], HiddenKeyKeysData[539], HiddenKeyKeysData[1559], HiddenKeyKeysData[869], HiddenKeyKeysData[196], HiddenKeyKeysData[797], HiddenKeyKeysData[896], HiddenKeyKeysData[656], HiddenKeyKeysData[998], HiddenKeyKeysData[662], HiddenKeyKeysData[402], HiddenKeyKeysData[88], HiddenKeyKeysData[1987], HiddenKeyKeysData[983], HiddenKeyKeysData[1594], HiddenKeyKeysData[1796], HiddenKeyKeysData[808], HiddenKeyKeysData[307], HiddenKeyKeysData[2300], HiddenKeyKeysData[2504], HiddenKeyKeysData[2041], HiddenKeyKeysData[2447], HiddenKeyKeysData[1464], HiddenKeyKeysData[152], HiddenKeyKeysData[483], HiddenKeyKeysData[450], HiddenKeyKeysData[314], HiddenKeyKeysData[1064], HiddenKeyKeysData[1040], HiddenKeyKeysData[1044], HiddenKeyKeysData[64], HiddenKeyKeysData[2100], HiddenKeyKeysData[1035], HiddenKeyKeysData[782], HiddenKeyKeysData[2237], HiddenKeyKeysData[476], HiddenKeyKeysData[645], HiddenKeyKeysData[1416], HiddenKeyKeysData[709], HiddenKeyKeysData[2517], HiddenKeyKeysData[1513], HiddenKeyKeysData[2318], HiddenKeyKeysData[1318], HiddenKeyKeysData[1735], HiddenKeyKeysData[1371], HiddenKeyKeysData[1539], HiddenKeyKeysData[538], HiddenKeyKeysData[770], HiddenKeyKeysData[67], HiddenKeyKeysData[1797], HiddenKeyKeysData[571], HiddenKeyKeysData[1613], HiddenKeyKeysData[804], HiddenKeyKeysData[95], HiddenKeyKeysData[1721], HiddenKeyKeysData[1509], HiddenKeyKeysData[1266], HiddenKeyKeysData[383], HiddenKeyKeysData[648], HiddenKeyKeysData[762], HiddenKeyKeysData[642], HiddenKeyKeysData[999], HiddenKeyKeysData[859], HiddenKeyKeysData[1978], HiddenKeyKeysData[2490], HiddenKeyKeysData[2414], HiddenKeyKeysData[1230], HiddenKeyKeysData[1236], HiddenKeyKeysData[2368], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char HiddenKeyKeysData[2626] = "1vom0fhYVPpU1bR5XsG9jY1GtoqcB59m6UrG913hIHJfL3EuELLJikHCtGsdhNTJgPMgH5jqcOl0k/ViNMmvCn/llXfPPb+eylL+PdXcin/bzSjMQN3xzCCV6xQVpZerRyx/hLP9WSZoAqH2La2l8kizjeUZbCLvwNCfVNcpzr2ETNDdUD6dCS9hPIwVVw+jESyL46AauyuGqwDULApZkutqTpDsnu72unQf9Owcacg4uQ9W1ECY4sVu4oHEozjx4lD EGRzEPoPebO+jOM58/P/UJ5wK+9E/g4zQXtJ+LIyVuc0SPznFVPYdG7Vgr2kB1ATf/N3MVFGWIHV4p1blpAprwDlCDhu9QThwAvONeqbklxKrrFQG05a09wxmTRrhmMniyJ3UPVRpTJpvHeJO9rkjcolsZ5Mb3qXonCidc7LxbIiR+RbANohW9WqoWQak18VLT8mAvS2ec1PyGAkyXT/9lyabz70gI9sj+DEa0mzmrFWiZNoaIhsLqKcq4uGwItz6dWo9m9wPutiWb+/xjxZb1s0FVGwdn0DlU90wQlnS6mLM0mHHLd+HZ5okpg21f+H247rkseiS0wSBWFZJQWaX4impIVxgTfz84aAO+CVuASEWl802P+xQW+deKQSytnscslqc4iTdUwl90lv+k-6zQ9FjhYFBJactZ1r2RAk5vyHKE7sPhpDFduRjYWwZhqYI0sEhcqrlSjrT/WSDw8NoRiXAinMj2ETid5+cNavvMXf06lHBlwNK7oDDqgNAM.xZm2dJYX+naoEMBAVHEDRxqKMx7lsEy33leXSlzZyyt1pqel5WFIjgvaCxPou/MazuOorh5mHEe2XQgA6AIuZnlzeraK+pTv1e6JBz7Uf6zC/nLsJMLUb0iGnrt6r1ewLh30beQ8zXulj+X8C/QarUrHeDJxF4sRxWTxVgJgYS8IZt+z1IvFh7g9qC/GZqFbJJFT3QAnZhXP25quvMqJngTB8aD4FoWnel00tb04W7OAnaj2uaj3DWbgssqz83t4Pwtck+QP7Z7ZpieOOrfPI/0VrWRof/CZgyVb1pQHzrOG4vJSjPjrC10rCwlcNOnAfeKKC2Wm6BiSO/YJ4EOphAy4kSjhd/aqoqz9/rlKIRPYewgeSX3VvCatXlsLxscIKztwMQohZcP+cRh/dsL79uIlogAwLYJJuMGTxiE2yYQtdVwK1ElnZGGszpF4p3on/OqqxD1B+mScmlWTBoaXqJsJ6NJMeZoi8EA62+0wxZgAORFepXYaXkeB03cbi8c+bB3/CniiqQ/WkxYng80J51KVjQ+hbqdpkiB.4iVzpsNy8sHRg+8EpllZlFHYyTKqFW3aNuZFZoKtaM1c4oJB7pHcpXZJnIo1kR61Th+xqDqRRvXMCslOn+Ww6VdptBVQQ52T3kXEQXpgJOl+S58SGuLZExg+0iJzQxjlqdTvgwujiPUkeP3Oh8Rex19IzWav2nAKP0Wit68cN8Fu73TSOwmaxq9uXKJ/nOsJgXsWpZF0rsZTg0cTHIu8AMJ7HGgvp2gWyzmLFe7QUEQXgJWV3C/CH4ypf94GPB+Uq+/zbHvOF9Woaq3Zl4LkcRDTH0GwhaB6NcmaJOgd1nXX7X9tSDjlhfqE4HX/iVABadXAPdwchstzrC4HJYUyhuYYW5TMB17vpXXis2KaFQgZqcvGSrnw3HL0M1hOTWbsNltkaauTb56ikORJ3XuT4Fugn6SFi7NJajKV/m+1AWzweRVQWm0dMOLXBF2w2v6bHMNVmBnkUz3wfjif/C8S64Nw8KYwyjonGHtYDjZh03C5DmwB7a67wS++s4YyBc2Xtf/m050cYZj0fD8jy8Ux5L2iIBPHK1sg/NWT5zdzBMRpALqj1Z5YdAu8DL3ZBrZNwSRQ1fX9Eaiwn50+Ex3p9RM1tZfQYDIfiU7RDgHFtuVQ2cgJihFYgQv0deuUqFZS7AWz6wkNaQ4Uz/zEdFXnN6WxEYGV1J3J5wP3lZsAkXwnm6wYGQp8AYla+aNXZLflLv34OjntMixAzWe8wr4BspRdifTBAVV/hsrArlx9PC6n7HYwkh0JibgSTeTqqQzWNUfXPwbzAA+z+k+S/yGdlJm2cWLXTr5XKNMBildv8TNwkD+PoBYNG1GsKz7hkoTWlBovhAm0rW4EBqt3x+jnEhixvXpCAxOulnvNO2QHea0cS6TWKllORxv14BnbYNMucCtz7aTkZIwaRQD/1T68cnp5vEPfB/jGy/e5zIFDQzG5dXaJ6fbbPEvVrbHx+JsT9Rqegj+JL5bjrgnQF+ThWiX8wEiQ43ec2SGsztckMrpSVVQJT6vi2LIBzuJSRiPNbxS9ctYAdrV8tzczWs2yWH3wLmF2vVcpVLkFyhrYLJ94HSRXiw8BQSFgprCcCyQUeSzUoSw.di3g1/IdLWkkTBDNDNC1Z1Xkkb1S068hhhWzejVzsLyj9VrsNfFxEkuBVaElfl6N+xZpRCgiRkvtcpqlyHdVaEf3glL42uWhQn2Brztj+I/I2EKjMxKifa8I08MnpSR577JX0biDt5NILZKkQgbEYTwl0OP9ZVgOs9ElKxey4ZId/AbeIs5YkgT/pZpTsj30ZruhwCx6p0oEHvZmQ\\\"";

- (NSString *)description
{
  return [@{
            @"accessKey": self.accessKey,
            @"key": self.key,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
